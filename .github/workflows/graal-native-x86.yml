# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Native Graal CI and build Docker

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Version of the images
        required: true
      publish:
        type: boolean
        description: Publish to the Github Registry?
        required: false
        default: false
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - uses: graalvm/setup-graalvm@v1.2.2
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.WP_TOKEN }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle Wrapper
      run: |
        export DT_TENANT_URL=$(echo ${{ secrets.DT_DEPLOYMENT_URL }} | base64 -d)
        export DT_TOKEN=$(echo ${{ secrets.DT_DEPLOYMENT_TOKEN }} | base64 -d)
        ./gradlew dynatraceNativeCompile        

    - name: Set Env Push
      if: ${{ github.event_name == 'push' }}
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Set Env Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: echo "RELEASE_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
    - name: Set Env Other
      if: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'push' }}
      run: echo "RELEASE_VERSION=none" >> $GITHUB_ENV
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.WP_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3


    - name: Build and push categories
      uses: docker/build-push-action@v5
      with:
        context: ./categories
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/weekplanner-categories:latest
          ghcr.io/ihudak/weekplanner-categories:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/weekplanner-categories:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push tasks
      uses: docker/build-push-action@v5
      with:
        context: ./tasks
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/weekplanner-tasks:latest
          ghcr.io/ihudak/weekplanner-tasks:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/weekplanner-tasks:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push users
      uses: docker/build-push-action@v5
      with:
        context: ./users
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/weekplanner-users:latest
          ghcr.io/ihudak/weekplanner-users:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/weekplanner-users:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push workitems
      uses: docker/build-push-action@v5
      with:
        context: ./workitems
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/weekplanner-workitems:latest
          ghcr.io/ihudak/weekplanner-workitems:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/weekplanner-workitems:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push WebApp
      uses: docker/build-push-action@v5
      with:
        context: ./web/week-planner-web
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/weekplanner-web:latest
          ghcr.io/ihudak/weekplanner-web:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/weekplanner-web:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Postgres
      uses: docker/build-push-action@v5
      with:
        context: ./database/postgres
        push: ${{ github.event_name == 'push' || inputs.publish }}
        tags: |
          ghcr.io/ihudak/wp-postgres:latest
          ghcr.io/ihudak/wp-postgres:${{ env.RELEASE_VERSION }}
          ghcr.io/ihudak/wp-postgres:build_${{ github.run_number }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
